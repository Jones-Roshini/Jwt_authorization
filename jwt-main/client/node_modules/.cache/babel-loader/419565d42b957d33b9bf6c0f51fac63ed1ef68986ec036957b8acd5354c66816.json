{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\n/**Make API request */\n\n/**authenticate function */\nexport async function authenticate(username) {\n  try {\n    return await axios.post('/api/authenticate', {\n      username\n    });\n  } catch (error) {\n    return {\n      error: \"Username doesnt exisit\"\n    };\n  }\n}\n\n/**get user details */\nexport async function getUser({\n  username\n}) {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/user/${username}`);\n    return {\n      data\n    };\n  } catch (error) {\n    return {\n      error: \"Password doesnt match\"\n    };\n  }\n}\n\n/**register user function */\nexport async function registerUser(credentials) {\n  try {\n    const {\n      data: {\n        msg\n      },\n      status\n    } = await axios.post(`/api/register`, credentials);\n    let {\n      username,\n      email\n    } = credentials;\n\n    /**send email */\n    if (status === 201) {\n      await axios.post('/api/registerMail', {\n        username,\n        userEmail: email,\n        text: msg\n      });\n    }\n    return Promise.resolve(msg);\n  } catch (error) {\n    return Promise.reject({\n      error\n    });\n  }\n}\n\n/**login function */\nexport async function verifyPassword({\n  username,\n  password\n}) {\n  try {\n    if (username) {\n      const {\n        data\n      } = await axios.post('/api/login', {\n        username,\n        password\n      });\n      return Promise.resolve({\n        data\n      });\n    }\n  } catch (error) {\n    return Promise.reject({\n      error: \"Password doesnt match...\"\n    });\n  }\n}\n\n/**upadate user function */\nexport async function upadateUser(response) {\n  try {\n    const token = await localStorage.getItem('token');\n    const data = await axios.put('/api/upadateuser', response, {\n      haeders: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n    return Promise.resolve({\n      data\n    });\n  } catch (error) {\n    return Promise.reject({\n      error: \"Couldnt Update Profile...!\"\n    });\n  }\n}\n\n/**generate OTP */\nexport async function generateOTP(username) {\n  try {\n    const {\n      data: {\n        code\n      },\n      status\n    } = await axios.get('/api/generateOTP', {\n      params: {\n        username\n      }\n    });\n    if (status === 201) {\n      //send mail with otp\n      let {\n        data: {\n          email\n        }\n      } = await getUser({\n        username\n      });\n      let text = `Your Password Reovery OTP is ${code}.Verify and recover your password.`;\n      await axios.post('/api/registerMail', {\n        username,\n        userEmail: email,\n        text,\n        subject: \"Password Recovery OTP\"\n      });\n    }\n    return Promise.resolve(code);\n  } catch (error) {\n    return Promise.reject({\n      error\n    });\n  }\n}\n\n/**Verify OTP */\nexport async function verifyOTP({\n  username,\n  code\n}) {\n  try {\n    const {\n      data,\n      status\n    } = await axios.get('/api/verifyOTP', {\n      params: {\n        username,\n        code\n      }\n    });\n    return {\n      data,\n      status\n    };\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\n/**Reset password */\nexport async function resetPassword({\n  username,\n  password\n}) {\n  try {\n    const {\n      data,\n      status\n    } = await axios.put('/api/resetPassword', {\n      username,\n      password\n    });\n    return Promise.resolve({\n      data,\n      status\n    });\n  } catch (error) {\n    return Promise.reject({\n      error\n    });\n  }\n}","map":{"version":3,"names":["axios","defaults","baseURL","process","env","REACT_APP_SERVER_DOMAIN","authenticate","username","post","error","getUser","data","get","registerUser","credentials","msg","status","email","userEmail","text","Promise","resolve","reject","verifyPassword","password","upadateUser","response","token","localStorage","getItem","put","haeders","generateOTP","code","params","subject","verifyOTP","resetPassword"],"sources":["C:/Users/Judith/Downloads/jwt-main/jwt-main/client/src/helper/hepler.js"],"sourcesContent":["import axios from 'axios'\r\naxios.defaults.baseURL=process.env.REACT_APP_SERVER_DOMAIN;\r\n\r\n/**Make API request */\r\n\r\n/**authenticate function */\r\nexport async function authenticate(username){\r\n    try{\r\n       return await axios.post('/api/authenticate',{username})\r\n    }catch(error){\r\n        return {error:\"Username doesnt exisit\"}\r\n    }\r\n}\r\n\r\n/**get user details */\r\nexport async function getUser({username}){\r\n    try{\r\n     const{data}= await axios.get(`/api/user/${username}`)\r\n      return {data};\r\n    }catch(error){\r\n        return {error:\"Password doesnt match\"}\r\n    }\r\n}\r\n\r\n/**register user function */\r\nexport async function registerUser(credentials){\r\n    try{\r\n     const{data:{msg},status}=await axios.post(`/api/register`,credentials);\r\n\r\n     let{username,email}=credentials;\r\n\r\n     /**send email */\r\n     if(status===201){\r\n        await axios.post('/api/registerMail',{username,userEmail:email,text:msg})\r\n     }\r\n     return Promise.resolve(msg)\r\n    }catch(error){\r\n     return Promise.reject({error})\r\n    }\r\n}\r\n\r\n/**login function */\r\nexport async function verifyPassword({username,password}){\r\n    try{\r\n     if(username){\r\n       const {data}= await axios.post('/api/login',{username,password})\r\n       return Promise.resolve({data});\r\n    }\r\n    }catch(error){\r\n        return Promise.reject({error:\"Password doesnt match...\"})\r\n    }\r\n}\r\n\r\n/**upadate user function */\r\nexport async function upadateUser(response){\r\ntry{\r\n const token=await localStorage.getItem('token')\r\n const data=await axios.put('/api/upadateuser',response,{haeders:{\"Authorization\":`Bearer ${token}`}})\r\n return Promise.resolve({data})\r\n}catch(error){\r\n    return Promise.reject({error:\"Couldnt Update Profile...!\"})\r\n}\r\n}\r\n\r\n/**generate OTP */\r\nexport async function generateOTP(username){\r\n    try{\r\n    const {data:{code},status}= await axios.get('/api/generateOTP',{params:{username}})\r\n    if(status===201){\r\n        //send mail with otp\r\n        let {data:{email}}=await getUser({username})\r\n        let text=`Your Password Reovery OTP is ${code}.Verify and recover your password.`;\r\n        await axios.post('/api/registerMail',{username,userEmail:email,text,subject:\"Password Recovery OTP\"})\r\n    }   \r\n    return Promise.resolve(code); \r\n}catch(error){\r\n        return Promise.reject({error});\r\n    }\r\n}\r\n\r\n/**Verify OTP */\r\nexport async function verifyOTP({username,code}){\r\n    try{\r\n     const{data,status}= await axios.get('/api/verifyOTP',{params:{username,code}})\r\n     return {data,status}\r\n    }catch(error){\r\n        return Promise.reject(error);\r\n    }\r\n}\r\n\r\n/**Reset password */\r\nexport async function resetPassword({username,password}){\r\n    try{\r\n     const {data,status}=await axios.put('/api/resetPassword',{username,password})\r\n     return Promise.resolve({data,status})\r\n    }catch(error){\r\n        return Promise.reject({error})\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}